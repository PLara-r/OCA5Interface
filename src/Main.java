public class Main implements Walk, Run {
    public int getSpeed() {
        return 1;
    }
    public static void main(String[] args) {
        System.out.println(new Main().getSpeed());
    }}
 //1
//Если класс реализует два интерфейса, 
//которые имеют методы по умолчанию с одинаковыми именем и сигнатурой, компилятор выдаст ошибку.
// Однако из этого правила есть исключение: если подкласс переопределяет дубликаты методов по умолчанию, код будет компилироваться без проблем - неоднозначность того,
//какая версия вызываемого метода была удалена.
//    Например, следующая измененная реализация Catскомпилирует и выведет 1:
//Вы можете видеть, что наличие класса, который реализует или наследует два дублирующих метода по умолчанию, вынуждает класс реализовать новую версию метода,
//иначе код не будет компилироваться. Это правило сохраняется даже для абстрактных классов, которые реализуют несколько интерфейсов, 
//потому что метод по умолчанию может быть вызван в конкретном методе внутри абстрактного класса.
